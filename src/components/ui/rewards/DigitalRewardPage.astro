---
import Layout from "@layouts/Layout.astro";
import PageTitle from "@components/ui/PageTitle.astro";
import {createMarkdownProcessor} from "@astrojs/markdown-remark";
import {actions} from "astro:actions";
import ActionResult from "@components/ui/ActionResult.astro";
import type {DigitalReward} from "../../../lib/types";

interface Props {
    reward: DigitalReward,
    validPrs: number
}

const {reward, validPrs} = Astro.props

const markdownProcessor = await createMarkdownProcessor({
    syntaxHighlight: false,
})

const description = await markdownProcessor.render(reward.description)
const redeem_info = await markdownProcessor.render(reward.redeem_info ?? "")
---

<Layout title = `Claim ${reward.title}` description = `Claim ${reward.title}` canonical = `/rewards/${reward.id}`>
    <div class = "mx-auto">
        <ActionResult action = {actions.rewards.claim_digital}/>
        <PageTitle>{reward.title}</PageTitle>
        <div class = "mx-auto prose max-w-none prose-invert prose-h2:mt-0 prose-h2:mb-2 prose-img:m-0 prose-p:mt-2 prose-p:mb-2 prose-li:m-0 prose-h2:text-center prose-blockquote:mb-0">
            <img src = {reward.banner_url} alt = {reward.title}/>
            <Fragment set:html = {description.code}/>
            {reward.digitalRewardCode ?
                    <div class = "justify-center flex flex-col text-center rounded-xl gap-y-2 mb-2">
                        <h2>Your code is:</h2>
                        <pre class = "p-2 border-white/10 bg-white/5 shadow-sm border  rounded-md select-all not-prose"><code>{reward.digitalRewardCode.code}</code></pre>
                    </div> :
                    <form method = "post" action = {actions.rewards.claim_digital}>
                        <input type = "hidden" value = {reward.id} name = "id"/>
                        <button class = "mb-4 px-4 py-2 w-full border border-white/10 rounded-md text-lg font-bold shadow-sm bg-primary text-black animate-sm-glow animate-sm-glow hover:bg-secondary hover:border-secondary transition-colors" type = "submit">Generate Code</button>
                    </form>}

            {reward.redeem_info &&
                    <Fragment set:html = {redeem_info.code}/>}
        </div>
        <a href = "/profile">
            <button class = "px-4 py-2 w-full border border-primary rounded-md text-sm font-medium text-primary shadow-sm hover:bg-primary hover:text-black transition-colors">Back to Rewards</button>
        </a>
    </div>
</Layout>
